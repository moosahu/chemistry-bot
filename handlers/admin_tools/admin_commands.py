#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
ุฃุฏุงุฉ ุชุตุฏูุฑ ุจูุงูุงุช ุงููุณุชุฎุฏููู ุฅูู ููู ุฅูุณู - ุฎุงุตุฉ ุจุงููุฏูุฑ ููุท
ูุฐุง ุงูููู ูุถูู ุฃูุฑ /export_users ููุจูุช ููุชููู ุงููุฏูุฑ ูู ุชุตุฏูุฑ ุจูุงูุงุช ุงููุณุชุฎุฏููู ุฅูู ููู ุฅูุณู
"""

import os
import logging
from telegram import Update
from telegram.ext import (
    CallbackContext,
    CommandHandler,
    Application
)

# ุงุณุชูุฑุงุฏ ุฃุฏุงุฉ ุงูุชุตุฏูุฑ
from admin_tools.export_users_to_excel import export_users_to_excel

# ุชูููู ุงูุชุณุฌูู
logger = logging.getLogger(__name__)

async def export_users_command(update: Update, context: CallbackContext):
    """
    ูุนุงูุฌ ุฃูุฑ /export_users ูุชุตุฏูุฑ ุจูุงูุงุช ุงููุณุชุฎุฏููู ุฅูู ููู ุฅูุณู
    ูุฐุง ุงูุฃูุฑ ูุชุงุญ ูููุฏูุฑ ููุท
    """
    user_id = update.effective_user.id
    chat_id = update.effective_chat.id
    
    try:
        # ุงูุชุญูู ูู ุตูุงุญูุงุช ุงููุฏูุฑ
        is_admin = await check_admin_rights(user_id, context)
        
        if not is_admin:
            logger.warning(f"ูุญุงููุฉ ุบูุฑ ูุตุฑุญ ุจูุง ูููุตูู ุฅูู ุฃูุฑ ุงูุชุตุฏูุฑ ูู ูุจู ุงููุณุชุฎุฏู {user_id}")
            await context.bot.send_message(
                chat_id=chat_id,
                text="โ๏ธ ุนุฐุฑุงูุ ูุฐุง ุงูุฃูุฑ ูุชุงุญ ูููุฏูุฑ ููุท."
            )
            return
        
        # ุฅุฑุณุงู ุฑุณุงูุฉ ุงูุชุธุงุฑ
        wait_message = await context.bot.send_message(
            chat_id=chat_id,
            text="โณ ุฌุงุฑู ุงุณุชุฎุฑุงุฌ ุจูุงูุงุช ุงููุณุชุฎุฏููู ูุชุตุฏูุฑูุง ุฅูู ููู ุฅูุณู...\nูุฏ ุชุณุชุบุฑู ูุฐู ุงูุนูููุฉ ุจุถุน ุซูุงูู."
        )
        
        # ุชุตุฏูุฑ ุจูุงูุงุช ุงููุณุชุฎุฏููู ุฅูู ููู ุฅูุณู
        excel_path = export_users_to_excel(admin_user_id=user_id)
        
        if not excel_path or not os.path.exists(excel_path):
            logger.error(f"ูุดู ุชุตุฏูุฑ ุจูุงูุงุช ุงููุณุชุฎุฏููู ูููุฏูุฑ {user_id}")
            await context.bot.send_message(
                chat_id=chat_id,
                text="โ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุชุตุฏูุฑ ุจูุงูุงุช ุงููุณุชุฎุฏููู. ูุฑุฌู ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู ูุงุญูุงู."
            )
            return
        
        # ุฅุฑุณุงู ููู ุงูุฅูุณู
        logger.info(f"ุฅุฑุณุงู ููู ุชุตุฏูุฑ ุจูุงูุงุช ุงููุณุชุฎุฏููู ูููุฏูุฑ {user_id}: {excel_path}")
        with open(excel_path, 'rb') as excel_file:
            await context.bot.send_document(
                chat_id=chat_id,
                document=excel_file,
                filename=os.path.basename(excel_path),
                caption="๐ ุฅููู ููู ุฅูุณู ูุญุชูู ุนูู ุจูุงูุงุช ุฌููุน ุงููุณุชุฎุฏููู ุงููุณุฌููู ูู ุงูุจูุช."
            )
        
        # ุชุญุฏูุซ ุฑุณุงูุฉ ุงูุงูุชุธุงุฑ
        await context.bot.edit_message_text(
            chat_id=chat_id,
            message_id=wait_message.message_id,
            text="โ ุชู ุชุตุฏูุฑ ุจูุงูุงุช ุงููุณุชุฎุฏููู ุจูุฌุงุญ ูุฅุฑุณุงู ุงูููู."
        )
        
        logger.info(f"ุชู ุชุตุฏูุฑ ุจูุงูุงุช ุงููุณุชุฎุฏููู ุจูุฌุงุญ ูููุฏูุฑ {user_id}")
    
    except Exception as e:
        logger.error(f"ุฎุทุฃ ุฃุซูุงุก ูุนุงูุฌุฉ ุฃูุฑ ุชุตุฏูุฑ ุงููุณุชุฎุฏููู ูููุณุชุฎุฏู {user_id}: {e}")
        await context.bot.send_message(
            chat_id=chat_id,
            text="โ ุญุฏุซ ุฎุทุฃ ุบูุฑ ูุชููุน ุฃุซูุงุก ุชูููุฐ ุงูุฃูุฑ. ูุฑุฌู ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู ูุงุญูุงู."
        )

async def check_admin_rights(user_id, context):
    """
    ุงูุชุญูู ููุง ุฅุฐุง ูุงู ุงููุณุชุฎุฏู ูุฏูุฑุงู
    
    ุงููุนููุงุช:
        user_id (int): ูุนุฑู ุงููุณุชุฎุฏู ููุชุญูู
        context (CallbackContext): ุณูุงู ุงููุญุงุฏุซุฉ
    
    ุงูุนุงุฆุฏ:
        bool: True ุฅุฐุง ูุงู ุงููุณุชุฎุฏู ูุฏูุฑุงูุ False ุฎูุงู ุฐูู
    """
    try:
        # ุงูุญุตูู ุนูู ูุฏูุฑ ูุงุนุฏุฉ ุงูุจูุงูุงุช ูู ุณูุงู ุงูุจูุช
        db_manager = context.application.bot_data.get('DB_MANAGER')
        
        if not db_manager:
            logger.error("ูู ูุชู ุงูุนุซูุฑ ุนูู ูุฏูุฑ ูุงุนุฏุฉ ุงูุจูุงูุงุช ูู ุณูุงู ุงูุจูุช")
            return False
        
        # ุงุณุชุนูุงู ููุชุญูู ูู ุตูุงุญูุงุช ุงููุฏูุฑ
        query = "SELECT is_admin FROM users WHERE user_id = :user_id"
        result = await db_manager.fetch_one(query, {'user_id': user_id})
        
        if result and result.get('is_admin'):
            logger.info(f"ุชู ุงูุชุญูู ูู ุตูุงุญูุงุช ุงููุฏูุฑ ูููุณุชุฎุฏู {user_id}: ุตูุงุญูุงุช ูุฏูุฑ ูุคูุฏุฉ")
            return True
        
        logger.warning(f"ุชู ุงูุชุญูู ูู ุตูุงุญูุงุช ุงููุฏูุฑ ูููุณุชุฎุฏู {user_id}: ููุณ ูุฏูุฑุงู")
        return False
    
    except Exception as e:
        logger.error(f"ุฎุทุฃ ุฃุซูุงุก ุงูุชุญูู ูู ุตูุงุญูุงุช ุงููุฏูุฑ ูููุณุชุฎุฏู {user_id}: {e}")
        return False

def register_admin_handlers(application: Application):
    """
    ุชุณุฌูู ูุนุงูุฌุงุช ุงูุฃูุงูุฑ ุงูุฅุฏุงุฑูุฉ
    
    ุงููุนููุงุช:
        application (Application): ุชุทุจูู ุงูุจูุช
    """
    try:
        # ุชุณุฌูู ุฃูุฑ ุชุตุฏูุฑ ุจูุงูุงุช ุงููุณุชุฎุฏููู
        export_handler = CommandHandler("export_users", export_users_command)
        application.add_handler(export_handler)
        
        logger.info("ุชู ุชุณุฌูู ูุนุงูุฌุงุช ุงูุฃูุงูุฑ ุงูุฅุฏุงุฑูุฉ ุจูุฌุงุญ")
    except Exception as e:
        logger.error(f"ุฎุทุฃ ุฃุซูุงุก ุชุณุฌูู ูุนุงูุฌุงุช ุงูุฃูุงูุฑ ุงูุฅุฏุงุฑูุฉ: {e}")
